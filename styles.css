/* 1) CSS-переменные (глитч-интенсивность) */
:root {
    --mouse-intensity: 1;
    --scroll-intensity: 1;
    --glitch-intensity: calc(var(--mouse-intensity) * var(--scroll-intensity));
  }
  
  /* 2) Старомониторный эффект (виньетка + скан-линии) */
  body::before {
    content: "";
    pointer-events: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    background:
      radial-gradient(circle at center, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0.85) 100%),
      radial-gradient(circle, rgba(255, 255, 255, 0.05) 1%, rgba(255, 255, 255, 0) 60%);
    background-blend-mode: multiply;
    animation: flicker 10s infinite;
  }
  body::after {
    content: "";
    pointer-events: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 99999;
    background: repeating-linear-gradient(0deg,
        rgba(255, 255, 255, 0.05) 0px,
        rgba(255, 255, 255, 0.05) 2px,
        rgba(255, 255, 255, 0) 4px,
        rgba(255, 255, 255, 0) 6px);
    animation: scanline 0.15s infinite steps(1);
    mix-blend-mode: lighten;
  }
  @keyframes flicker {
    0% { opacity: 0.03; }
    10% { opacity: 0.06; }
    20% { opacity: 0.10; }
    30% { opacity: 0.08; }
    40% { opacity: 0.12; }
    50% { opacity: 0.07; }
    60% { opacity: 0.14; }
    70% { opacity: 0.09; }
    80% { opacity: 0.05; }
    90% { opacity: 0.11; }
    100% { opacity: 0.03; }
  }
  @keyframes scanline {
    0% { transform: translateY(0); }
    100% { transform: translateY(4px); }
  }
  
  /* 3) Сброс и базовые стили */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  html {
    scroll-behavior: smooth;
  }
  body {
    font-family: 'Handjet', sans-serif;
    font-size: 18px;
    background: #000;
    color: #fff;
    line-height: 1.5;
  }
  a {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s;
  }
  a:hover {
    color: #0ff;
  }
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  /* 4) Хедер: Волна + Контент, меню, переключатель языка */
  header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 160px;
    z-index: 1000;
  }
  #waveCanvas {
    display: block;
    width: 100%;
    height: 100%;
  }
  .header-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 20px;
    z-index: 10;
  }
  .logo-container {
    position: absolute;
    left: 20px;
    top: 10px;
  }
  .nav-links {
    display: flex;
    gap: 20px;
  }
  .nav-links a {
    font-size: 1.4rem;
    color: #fff;
  }
  /* Переключатель языка */
  .language-switcher {
    position: absolute;
    right: 80px;
    top: 20px;
    display: flex;
    gap: 10px;
    align-items: center;
  }
  .language-buttons button {
    background: transparent;
    border: 1px solid #0ff;
    color: #0ff;
    padding: 5px 10px;
    cursor: pointer;
    font-family: inherit;
    font-size: 0.9rem;
    transition: background 0.3s, color 0.3s;
  }
  .language-buttons button:hover {
    background: #0ff;
    color: #000;
  }
  .language-dropdown {
    display: none;
    background: transparent;
    border: 1px solid #0ff;
    color: #0ff;
    padding: 5px 10px;
    font-family: inherit;
    font-size: 0.9rem;
  }
  .burger {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    position: absolute;
    right: 20px;
    top: 20px;
  }
  .burger span {
    display: block;
    width: 25px;
    height: 3px;
    background: #fff;
    margin: 4px 0;
  }
  @media (max-width: 768px) {
    .header-content {
      justify-content: center;
    }
    .logo-container {
      position: static;
      margin: 0 auto;
    }
    .nav-links {
      display: none;
      flex-direction: column;
      background: #000;
      position: absolute;
      top: 60px;
      right: 20px;
      padding: 10px;
      border: 1px solid #333;
      border-radius: 6px;
    }
    .burger {
      display: block;
    }
    /* При адаптиве можно скорректировать положение переключателя */
    .language-switcher {
      right: 20px;
      top: 70px;
    }
    .language-buttons {
      display: none;
    }
    .language-dropdown {
      display: block;
    }
  }
  
  /* 5) Мерцающие заголовки (сниженная интенсивность) */
  h1, h2, h3 {
    animation: heading-glow 3s infinite alternate;
    text-shadow: 0 0 1px #0ff, 0 0 2px #0ff, 0 0 3px #0ff;
  }
  @keyframes heading-glow {
    0% { text-shadow: 0 0 1px #0ff, 0 0 2px #0ff, 0 0 3px #0ff; }
    50% { text-shadow: 0 0 2px #0ff, 0 0 3px #0ff, 0 0 4px #0ff; }
    100% { text-shadow: 0 0 1px #0ff, 0 0 2px #0ff, 0 0 3px #0ff; }
  }
  
  /* 6) Glitch-Image (логотип) */
  .glitch-image {
    width: 312px;
    height: 119px;
    animation: glitch-skew 1s infinite linear alternate-reverse;
    image-rendering: pixelated;
    position: relative;
  }
  .glitch-image img {
    display: block;
    width: 100%;
    height: 100%;
    image-rendering: pixelated;
  }
  .glitch-image::before,
  .glitch-image::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("assets/logo.svg") no-repeat center;
    background-size: 312px 119px;
    image-rendering: pixelated;
    pointer-events: none;
    mix-blend-mode: screen;
  }
  .glitch-image::before {
    filter: drop-shadow(-2px 0px #ff00c1);
    animation: glitch-anim 3s infinite linear alternate;
  }
  .glitch-image::after {
    filter: drop-shadow(2px 0px #00fff9);
    animation: glitch-anim2 3s infinite linear alternate;
  }
  @keyframes glitch-anim {
    0% { clip: rect(10px, 9999px, 20px, 0); transform: translateX(0) skew(0deg); }
    5% { clip: rect(3px, 9999px, 15px, 0); transform: translateX(calc(-3px * var(--glitch-intensity))) skew(calc(1deg * var(--glitch-intensity))); }
    10% { clip: rect(25px, 9999px, 35px, 0); transform: translateX(calc(4px * var(--glitch-intensity))) skew(calc(-2deg * var(--glitch-intensity))); }
    15% { clip: rect(18px, 9999px, 28px, 0); transform: translateX(calc(-2px * var(--glitch-intensity))) skew(calc(3deg * var(--glitch-intensity))); }
    20% { clip: rect(8px, 9999px, 18px, 0); transform: translateX(calc(2px * var(--glitch-intensity))) skew(calc(-1deg * var(--glitch-intensity))); }
    25% { clip: rect(30px, 9999px, 42px, 0); transform: translateX(calc(-4px * var(--glitch-intensity))) skew(calc(2deg * var(--glitch-intensity))); }
    30% { clip: rect(12px, 9999px, 25px, 0); transform: translateX(calc(3px * var(--glitch-intensity))) skew(calc(-3deg * var(--glitch-intensity))); }
    35% { clip: rect(15px, 9999px, 27px, 0); transform: translateX(calc(1px * var(--glitch-intensity))) skew(calc(1deg * var(--glitch-intensity))); }
    40% { clip: rect(5px, 9999px, 15px, 0); transform: translateX(calc(-2px * var(--glitch-intensity))) skew(calc(1deg * var(--glitch-intensity))); }
    50% { clip: rect(22px, 9999px, 35px, 0); transform: translateX(calc(4px * var(--glitch-intensity))) skew(calc(-2deg * var(--glitch-intensity))); }
    60% { clip: rect(38px, 9999px, 48px, 0); transform: translateX(calc(-3px * var(--glitch-intensity))) skew(calc(3deg * var(--glitch-intensity))); }
    70% { clip: rect(10px, 9999px, 20px, 0); transform: translateX(calc(1px * var(--glitch-intensity))) skew(calc(-1deg * var(--glitch-intensity))); }
    80% { clip: rect(28px, 9999px, 40px, 0); transform: translateX(calc(-4px * var(--glitch-intensity))) skew(calc(2deg * var(--glitch-intensity))); }
    90% { clip: rect(15px, 9999px, 25px, 0); transform: translateX(calc(2px * var(--glitch-intensity))) skew(calc(-2deg * var(--glitch-intensity))); }
    100% { clip: rect(10px, 9999px, 20px, 0); transform: translateX(0) skew(0deg); }
  }
  @keyframes glitch-anim2 {
    0% { clip: rect(5px, 9999px, 15px, 0); transform: translateX(0) skew(0deg); }
    5% { clip: rect(28px, 9999px, 40px, 0); transform: translateX(calc(2px * var(--glitch-intensity))) skew(calc(-1deg * var(--glitch-intensity))); }
    10% { clip: rect(18px, 9999px, 30px, 0); transform: translateX(calc(-4px * var(--glitch-intensity))) skew(calc(2deg * var(--glitch-intensity))); }
    15% { clip: rect(35px, 9999px, 55px, 0); transform: translateX(calc(3px * var(--glitch-intensity))) skew(calc(-2deg * var(--glitch-intensity))); }
    20% { clip: rect(12px, 9999px, 25px, 0); transform: translateX(calc(-2px * var(--glitch-intensity))) skew(calc(1deg * var(--glitch-intensity))); }
    25% { clip: rect(40px, 9999px, 55px, 0); transform: translateX(calc(4px * var(--glitch-intensity))) skew(calc(-3deg * var(--glitch-intensity))); }
    30% { clip: rect(22px, 9999px, 35px, 0); transform: translateX(calc(-3px * var(--glitch-intensity))) skew(calc(2deg * var(--glitch-intensity))); }
    35% { clip: rect(12px, 9999px, 24px, 0); transform: translateX(calc(1px * var(--glitch-intensity))) skew(calc(-1deg * var(--glitch-intensity))); }
    40% { clip: rect(8px, 9999px, 20px, 0); transform: translateX(calc(1px * var(--glitch-intensity))) skew(calc(-1deg * var(--glitch-intensity))); }
    50% { clip: rect(30px, 9999px, 40px, 0); transform: translateX(calc(-2px * var(--glitch-intensity))) skew(calc(3deg * var(--glitch-intensity))); }
    60% { clip: rect(15px, 9999px, 25px, 0); transform: translateX(calc(4px * var(--glitch-intensity))) skew(calc(-2deg * var(--glitch-intensity))); }
    70% { clip: rect(45px, 9999px, 60px, 0); transform: translateX(calc(-4px * var(--glitch-intensity))) skew(calc(1deg * var(--glitch-intensity))); }
    80% { clip: rect(25px, 9999px, 35px, 0); transform: translateX(calc(3px * var(--glitch-intensity))) skew(calc(-3deg * var(--glitch-intensity))); }
    90% { clip: rect(5px, 9999px, 15px, 0); transform: translateX(calc(-1px * var(--glitch-intensity))) skew(calc(2deg * var(--glitch-intensity))); }
    100% { clip: rect(5px, 9999px, 15px, 0); transform: translateX(0) skew(0deg); }
  }
  @keyframes glitch-skew {
    0% { transform: skew(0deg); }
    50% { transform: skew(1deg); }
    100% { transform: skew(0deg); }
  }
  
  /* 7) Cover Section */
  #cover {
    position: relative;
    width: 100%;
    min-height: 100vh;
    background: url("https://picsum.photos/1600/900?grayscale") center/cover no-repeat;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
  }
  #cover .cover-content {
    background: rgba(0, 0, 0, 0.4);
    padding: 2rem;
    border-radius: 8px;
    max-width: 600px;
    margin: 2rem;
  }
  #cover .cover-content h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
    text-transform: uppercase;
  }
  #cover .cover-content p {
    font-size: 1.1rem;
    opacity: 0.9;
    line-height: 1.4;
  }
  
  /* 8) Other Sections */
  section {
    padding: 4rem 0;
    background: #000;
  }
  h2 {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 2rem;
    text-transform: uppercase;
  }
  /* Сетка портфолио – одна колонка */
  .grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1000px;
    margin: 0 auto;
  }
  .work-item {
    opacity: 0;
    transform: translateY(20px);
    /* Убираем transition, заменяем анимацией */
    display: flex;
    flex-direction: row;
    gap: 1rem;
    background: #222;
    border: 1px solid #333;
    border-radius: 6px;
    padding: 1rem;
    width: 100%;
    margin-bottom: 1rem;
  }
  .work-item.visible {
    animation: fadeInFlicker 1s forwards;
  }
  @keyframes fadeInFlicker {
    0% { opacity: 0; transform: translateY(20px); }
    50% { opacity: 1; transform: translateY(0); }
    70% { opacity: 0.8; }
    100% { opacity: 1; }
  }
  .work-media {
    flex: 0 0 120px;
    width: 120px;
    height: 120px;
    overflow: hidden;
  }
  @media (max-width: 768px) {
    .grid {
      grid-template-columns: 1fr;
    }
    .work-item {
      flex-direction: column;
    }
    .work-media {
      width: 100%;
      height: 0;
      padding-bottom: 100%;
      position: relative;
    }
    .work-thumb,
    .placeholder-logo {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  .work-thumb {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 6px;
    cursor: pointer;
    image-rendering: pixelated;
    loading: lazy;
    decoding: async;
    filter: grayscale(100%);
  }
  .placeholder-logo {
    width: 100%;
    height: 100%;
    border: 2px solid #777;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 6px;
    background: #333;
  }
  .placeholder-logo img {
    width: 40%;
    filter: grayscale(100%);
  }
  .work-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .work-item h3 {
    margin-bottom: 0.5rem;
    font-size: 1.2rem;
  }
  .work-item p {
    font-size: 0.95rem;
    opacity: 0.9;
    margin-bottom: 0.5rem;
  }
  .about-content {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    max-width: 1000px;
    margin: 0 auto;
  }
  .bio-row {
    display: flex;
    flex-direction: row;
    gap: 2rem;
  }
  .bio {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  .bio h3 {
    font-size: 1.3rem;
    margin-bottom: 1rem;
    text-transform: uppercase;
  }
  .bio p {
    font-size: 1rem;
    opacity: 0.9;
    line-height: 1.5;
    white-space: pre-line;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 10px;
    border-radius: 4px;
  }
  .artist-photo {
    width: 250px;
    height: 250px;
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .artist-photo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border: 2px solid #0ff;
    border-radius: 8px;
    image-rendering: pixelated;
    filter: grayscale(100%);
    loading: lazy;
    decoding: async;
  }
  .artist-statement {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
  }
  .artist-statement h3 {
    font-size: 1.3rem;
    margin-bottom: 1rem;
    text-transform: uppercase;
  }
  .artist-statement p {
    font-size: 1rem;
    opacity: 0.9;
    line-height: 1.5;
    white-space: pre-line;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 10px;
    border-radius: 4px;
  }
  @media (max-width: 768px) {
    .bio-row {
      flex-direction: column;
    }
    .artist-photo {
      width: 100%;
      height: auto;
    }
    .artist-photo img {
      height: auto;
    }
  }
  
  /* 9) Footer, модальное окно, контакты и кнопки работ */
  footer {
    background: #000;
    padding: 2rem 0;
    text-align: center;
    font-size: 0.9rem;
  }
  .modal {
    display: none;
    position: fixed;
    z-index: 3000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.95);
    overflow: hidden;
  }
  .modal-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
  }
  .modal-title-bar {
    flex: 0 0 auto;
    background: #000;
    color: #fff;
    text-align: center;
    padding: 1rem;
    font-weight: bold;
    text-transform: uppercase;
    border-bottom: 1px solid #333;
    position: relative;
    z-index: 1;
  }
  .modal-media-wrapper {
    flex: 1 1 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }
  .modal-media {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }
  .contact-buttons {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-top: 2rem;
  }
  .contact-button {
    display: block;
    text-align: center;
    padding: 0.7rem 1rem;
    border: 2px solid #0ff;
    color: #0ff;
    text-transform: uppercase;
    text-decoration: none;
    font-weight: 600;
    transition: background 0.3s, color 0.3s;
  }
  .contact-button:hover {
    background: #0ff;
    color: #000;
  }
  .modal-close {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
    color: #f1f1f1;
    font-size: 36px;
    font-weight: bold;
    cursor: pointer;
    z-index: 2;
  }
  .modal-close:hover,
  .modal-close:focus {
    color: #bbb;
  }
  .work-button {
    display: inline-block;
    margin-top: 0.5rem;
    padding: 0.4rem 0.8rem;
    border: 1px solid #0ff;
    color: #0ff;
    text-transform: uppercase;
    transition: background 0.3s, color 0.3s;
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 600;
  }
  .work-button:hover {
    background: #0ff;
    color: #000;
  }
  
  /* 10) TextScramble Styles */
  .dud {
    color: #0ff;
    opacity: 0.8;
  }
  
  /* 11) Стили для плавающих цитат */
  .floating-quote {
    position: absolute;
    z-index: 1;
    color: rgba(255, 255, 255, 0.3);
    font-style: italic;
    font-size: 1.1rem;
    pointer-events: none;
    text-shadow: 0 0 2px #0ff, 0 0 4px #0ff;
    animation: quoteFlicker 10s linear forwards;
    transform: translate(-50%, -50%);
    max-width: 30vw;
    word-wrap: break-word;
  }
  .floating-quote .quote-text {
    display: block;
  }
  .floating-quote .quote-author {
    display: block;
    margin-left: 1.5em;
    margin-top: 0.3em;
    opacity: 0.7;
  }
  @keyframes quoteFlicker {
    0% { opacity: 0; }
    10% { opacity: 0.7; }
    50% { opacity: 0.5; }
    80% { opacity: 0.3; }
    100% { opacity: 0; }
  }
  